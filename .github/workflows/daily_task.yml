name: test Workflow

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
        default: ubuntu
      run_platform:
        required: false
        type: string
        default: amd64
      tool_chain:
        required: true
        type: string
        default: gcc-11

jobs:
  test:
    runs-on: ${{ inputs.run_platform }}
    container:
      image: ${{ inputs.image_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get short sha
        id: slug
        run: echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: check ROS 2
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          ros2 --help
          echo "ROS_DISTRO: $ROS_DISTRO"
          echo "ROS_VERSION: $ROS_VERSION"
          echo "ROS_PYTHON_VERSION: $ROS_PYTHON_VERSION"

          # remove ros2-latest.list to avoid the error:
          # W: GPG error: http://packages.ros.org/ros2/ubuntu jammy InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY F42ED6FBAB17C654

          if [ -f /etc/apt/sources.list.d/ros2-latest.list ]; then
            rm /etc/apt/sources.list.d/ros2-latest.list
          fi

      - name: Install dependencies for build
        shell: bash
        run: |
          apt update -y
          apt install curl wget python3.10  python3-pip  make  vim  libglib2.0-dev  libcurl4-openssl-dev  python3-venv  zip  lcov  bc git build-essential  autoconf  libtool  pkg-config doxygen libacl1-dev mosquitto mosquitto-clients -y
          pip install pyinstaller jinja2 setuptools==74.1.2 pyyaml sphinx sphinx_rtd_theme sphinx-design myst-parser build linkify-it-py sphinx_multiversion
          pip install -r ./src/test/requirements.txt

      - name: set up rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.75.0


      - name: download and Use cmake
        run: |
          pip install cmake==3.28.0
          cmake --version

      - name: set up toolchain
        shell: bash
        run: |
          if [[ "${{ inputs.tool_chain }}" =~ gcc-([0-9.]+) ]]; then
              version="${BASH_REMATCH[1]}"
              apt-get update -y
              apt-get install software-properties-common -y
              add-apt-repository ppa:ubuntu-toolchain-r/test -y
              apt-get update -y
              apt-get install gcc-$version g++-$version -y
              echo "Extracted version: $version"
              gcc-$version --version
              g++-$version --version
              echo "CC=$(which gcc-$version)" >> $GITHUB_ENV
              echo "CXX=$(which g++-$version)" >> $GITHUB_ENV
          elif [[ "${{ inputs.tool_chain }}" =~ clang-([0-9.]+) ]]; then
              apt install lsb-release wget software-properties-common gnupg -y
              version="${BASH_REMATCH[1]}"
              echo $version
              wget https://apt.llvm.org/llvm.sh
              chmod +x llvm.sh
              ./llvm.sh ${version}
              clang-$version --version
              clang++-$version --version
              echo "CC=$(which clang-$version)" >> $GITHUB_ENV
              echo "CXX=$(which clang++-$version)" >> $GITHUB_ENV
          fi

      - name: start build
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          ./build.sh

      - name: start pytest
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash

          echo "start iox-roudi"
          ./build/iox-roudi &

          export CWD=$(pwd)/build
          cd ./src/test
          pytest .

          zip -r ${{ steps.slug.outputs.sha8 }}_${{ inputs.run_platform }}.zip test_reports


      - name: upload pytest report
        uses: actions/upload-artifact@v4
        if: inputs.tool_chain == 'gcc-11' && inputs.run_platform == 'ubuntu-22.04'
        with:
          name: test_report_${{ inputs.run_platform }}
          path: |
              ./src/test/${{ steps.slug.outputs.sha8 }}_${{ inputs.run_platform }}.zip
          retention-days: 3